[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-10-24 21:43:57.602033",
  "module": "Aures CRM",
  "name": "Cacher boutons",
  "script": "frappe.ui.form.on('Customer', {\n    after_save: function(frm) {\n        hide_button(frm);\n    },\n    \n    onload: function(frm) {\n        hide_button(frm);\n    }\n});\n\nfunction hide_button(frm) {\n    setTimeout(() => {\n        // frm.remove_custom_button('Accounting Ledger', 'View');\n        // frm.remove_custom_button('Accounts Receivable', 'View');\n        // frm.remove_custom_button('Pricing Rule', 'Create');\n        // frm.remove_custom_button('Get Customer Group Details', 'Actions');\n    }, 10); // Ajuste le délai si nécessaire\n}\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-23 14:19:30.132689",
  "module": "Aures CRM",
  "name": "GPS Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        // Ajouter le bouton \"Récupérer GPS Principal\" sous le menu \"GPS\"\n        frm.add_custom_button(__('Récupérer GPS Principal'), function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'custom_gps' avec les coordonnées GPS récupérées\n                    frm.set_value('custom_gps', gpsCoords);\n\n                    // Enregistrer automatiquement le document après la mise à jour du champ\n                    frm.save();\n\n                    // Optionnel : Afficher un message de succès\n                    // frappe.msgprint(`Coordonnées GPS récupérées et enregistrées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        }, __(\"Localiser\"));\n\n        // Ajouter le bouton \"Récupérer GPS Livraison\" sous le menu \"GPS\"\n        frm.add_custom_button(__('Récupérer GPS Livraison'), function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'custom_gps_livraison' avec les coordonnées GPS récupérées\n                    frm.set_value('custom_gps_livraison', gpsCoords);\n\n                    // Enregistrer automatiquement le document après la mise à jour du champ\n                    frm.save();\n\n                    // Optionnel : Afficher un message de succès\n                    // frappe.msgprint(`Coordonnées GPS Livraison récupérées et enregistrées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        }, __(\"Localiser\"));\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-14 12:40:21.326894",
  "module": "Aures CRM",
  "name": "Carte Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if (frm.doc.custom_gps) {\n            const [latitude, longitude] = frm.doc.custom_gps.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['custom_carte'].wrapper).html(`<iframe width=\"100%\" height=\"200\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-23 14:06:51.924484",
  "module": "Aures CRM",
  "name": "Carte Livraison Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if (frm.doc.custom_gps_livraison) {\n            const [latitude, longitude] = frm.doc.custom_gps_livraison.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['custom_carte_livraison'].wrapper).html(`<iframe width=\"100%\" height=\"200\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2025-01-23 11:58:58.154373",
  "module": "Aures CRM",
  "name": "Bouton Créer - Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh: function(frm) {\n        // Bouton \"Appeler\" sous le groupe \"Créer\"\n        // frm.add_custom_button(__('Appel Téléphonique'), function() {\n        //     let phone_number = frm.doc.mobile_no;\n        //     if (phone_number) {\n        //         frappe.db.insert({\n        //             doctype: 'Appel Telephonique',\n        //             client: frm.doc.name,\n        //             date: frappe.datetime.get_today(),\n        //             heure: frappe.datetime.now_datetime(),\n        //             utilisateur: frappe.user.full_name(),\n        //         }).then(function(doc) {\n        //             frappe.msgprint(__('Un nouvel appel téléphonique a été enregistré.'));\n        //             frappe.set_route('Form', 'Appel Telephonique', doc.name);\n        //         });\n\n        //         window.location.href = 'tel:' + phone_number;\n        //     } else {\n        //         frappe.msgprint(__('Aucun numéro de téléphone mobile n\\'est défini pour ce client.'));\n        //     }\n        // }, __(\"Créer\"));\n\n        // Bouton \"Créer Visite\" sous le groupe \"Créer\"\n        frm.add_custom_button(__('Visite Commerciale'), function() {\n            frappe.db.insert({\n                doctype: 'Visite Commerciale',\n                client: frm.doc.name,\n                date: frappe.datetime.get_today(),\n                utilisateur: frappe.user.full_name(),\n            }).then(function(doc) {\n                frappe.msgprint(__('Une nouvelle visite commerciale a été créée.'));\n                frappe.set_route('Form', 'Visite Commerciale', doc.name);\n            });\n        }, __(\"Créer\"));\n\n        // Bouton \"Créer Devis\" sous le groupe \"Créer\"\n        // frm.add_custom_button(__('Créer Devis'), function() {\n        //     frappe.model.open_mapped_doc({\n        //         method: \"erpnext.selling.doctype.customer.customer.make_quotation\",\n        //         frm: frm,  // Passe le formulaire courant pour créer un devis à partir de ce client\n        //     });\n        // }, __(\"Créer\"));\n\n        // Bouton \"Créer Commande\" sous le groupe \"Créer\"\n        frm.add_custom_button(__('Commande'), function() {\n            frappe.new_doc('Sales Order', {\n                customer: frm.doc.name  // Le champ reste customer dans Sales Order\n            }).then(function(doc) {\n                frappe.msgprint(__('Nouvelle commande créée avec succès !'));\n            }).catch(function(error) {\n                frappe.msgprint(__('Erreur lors de la création de la commande : ') + error);\n            });\n        }, __(\"Créer\"));\n        \n        frm.add_custom_button(__('Rendez-vous'), function() {\n            frappe.db.insert({\n                doctype: 'Rendez Vous Client',\n                client: frm.doc.name,\n            }).then(function(doc) {\n                frappe.msgprint(__('Nouveau Rendez-vous Client a été créée.'));\n                frappe.set_route('Form', 'Rendez-vous Client', doc.name);\n            });\n        }, __(\"Créer\"));\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-27 14:09:02.431490",
  "module": "Aures CRM",
  "name": "Statut Customer",
  "script": "frappe.listview_settings['Customer'].get_indicator = function(doc) {\n    if (doc.custom_status === 'Prospect') {\n        return [__('Prospect'), 'blue', 'custom_status,=,Prospect'];\n    } else if (doc.custom_status === 'Actif') {\n        return [__('Actif'), 'green', 'custom_status,=,Actif'];\n    } else if (doc.custom_status === 'Dormant') {\n        return [__('Dormant'), 'orange', 'custom_status,=,Dormant'];\n    } else if (doc.custom_status === 'Perdu') {\n        return [__('Perdu'), 'red', 'custom_status,=,Perdu'];\n    } else if (doc.custom_status === 'Exclu') {\n        return [__('Exclu'), 'gray', 'custom_status,=,Exclu'];\n    }\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-28 13:48:06.531356",
  "module": "Aures CRM",
  "name": "Calcul qualité Client",
  "script": "frappe.ui.form.on('Customer', {\n    custom_qualité_fréquence: function(frm) {\n        valider_champ(frm, 'custom_qualité_fréquence');\n        calculer_moyenne(frm);\n    },\n    custom_qualité_interaction: function(frm) {\n        valider_champ(frm, 'custom_qualité_interaction');\n        calculer_moyenne(frm);\n    },\n    custom_qualité_paiements: function(frm) {\n        valider_champ(frm, 'custom_qualité_paiements');\n        calculer_moyenne(frm);\n    }\n});\n\nfunction valider_champ(frm, fieldname) {\n    let valeur = frm.doc[fieldname];\n    if (valeur < 0 || valeur > 10) {\n        frappe.msgprint(__('La valeur de {0} doit être comprise entre 0 et 10.', [fieldname]));\n        frm.set_value(fieldname, '');\n    }\n}\n\nfunction calculer_moyenne(frm) {\n    let freq = frm.doc.custom_qualité_fréquence || 0;\n    let interaction = frm.doc.custom_qualité_interaction || 0;\n    let paiements = frm.doc.custom_qualité_paiements || 0;\n\n    let moyenne = (freq + interaction + paiements) / 3;\n\n    // Convertir la moyenne en une valeur de type évaluation (0 à 1)\n    let evaluation = moyenne / 10;\n\n    // Mettre à jour le champ custom_qualité_client\n    frm.set_value('custom_qualité_client', evaluation);\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-09-09 11:23:57.481621",
  "module": "Aures CRM",
  "name": "Cacher Bouton - Obtenir Articles",
  "script": "frappe.ui.form.on('Quotation', {\n    onload_post_render(frm) {\n        // Retirer le bouton personnalisé \"Opportunity\" dans le groupe \"Get Items From\"\n        frm.remove_custom_button('Opportunity', 'Get Items From');\n    },\n    refresh(frm) {\n        setTimeout(() => {\n            // Tenter de supprimer à nouveau au cas où il est ajouté après le refresh\n            frm.remove_custom_button('Opportunity', 'Get Items From');\n        }, 500);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-09-09 12:45:29.898350",
  "module": "Aures CRM",
  "name": "Utilisateur Devis",
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_save: function(frm) {\n        if (!frm.doc.utilisateur) {  // Vérifie si le champ utilisateur est vide\n            frm.set_value('custom_utilisateur', frm.doc.owner);  // Définit l'utilisateur avec le propriétaire initial (créateur)\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-09-09 12:46:00.713161",
  "module": "Aures CRM",
  "name": "Utilisateur Commande",
  "script": "frappe.ui.form.on('Sales Order', {\n\tbefore_save: function(frm) {\n        if (!frm.doc.utilisateur) {  // Vérifie si le champ utilisateur est vide\n            frm.set_value('custom_utilisateur', frm.doc.owner);  // Définit l'utilisateur avec le propriétaire initial (créateur)\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-09-10 13:57:20.378890",
  "module": "Aures CRM",
  "name": "Cacher boutons - Commande",
  "script": "frappe.ui.form.on('Sales Order', {\n    onload_post_render(frm) {\n        // Retirer le bouton personnalisé \"Opportunity\" dans le groupe \"Get Items From\"\n        frm.remove_custom_button('Pick List', 'Create');\n        frm.remove_custom_button('Delivery Note', 'Create');\n        frm.remove_custom_button('Work Order', 'Create');\n        frm.remove_custom_button('Sales Invoice', 'Create');\n        frm.remove_custom_button('Material Request', 'Create');\n        frm.remove_custom_button('Request for Raw Materials', 'Create');\n        frm.remove_custom_button('Purchase Order', 'Create');\n        frm.remove_custom_button('Project', 'Create');\n        frm.remove_custom_button('Payment Request', 'Create');\n        frm.remove_custom_button('Payment', 'Create');\n    },\n    refresh(frm) {\n        setTimeout(() => {\n            // Tenter de supprimer à nouveau au cas où il est ajouté après le refresh\n            frm.remove_custom_button('Pick List', 'Create');\n            frm.remove_custom_button('Delivery Note', 'Create');\n            frm.remove_custom_button('Work Order', 'Create');\n            frm.remove_custom_button('Sales Invoice', 'Create');\n            frm.remove_custom_button('Material Request', 'Create');\n            frm.remove_custom_button('Request for Raw Materials', 'Create');\n            frm.remove_custom_button('Purchase Order', 'Create');\n            frm.remove_custom_button('Project', 'Create');\n            frm.remove_custom_button('Payment Request', 'Create');\n            frm.remove_custom_button('Payment', 'Create');\n        }, 500);\n    }\n});\n",
  "view": "Form"
 }
]