[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-10-24 21:43:57.602033",
  "module": "Aures CRM",
  "name": "Cacher boutons",
  "script": "frappe.ui.form.on('Customer', {\n    after_save: function(frm) {\n        hide_button(frm);\n    },\n    \n    onload: function(frm) {\n        hide_button(frm);\n    }\n});\n\nfunction hide_button(frm) {\n    setTimeout(() => {\n        // frm.remove_custom_button('Accounting Ledger', 'View');\n        // frm.remove_custom_button('Accounts Receivable', 'View');\n        // frm.remove_custom_button('Pricing Rule', 'Create');\n        // frm.remove_custom_button('Get Customer Group Details', 'Actions');\n    }, 10); // Ajuste le délai si nécessaire\n}\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2025-02-04 20:16:25.742757",
  "module": "Aures CRM",
  "name": "GPS Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        // Ajouter le bouton \"Récupérer GPS Principal\" sous le menu \"GPS\"\n        frm.add_custom_button(__('Récupérer GPS Principal'), function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'custom_gps' avec les coordonnées GPS récupérées\n                    frm.set_value('custom_gps', gpsCoords);\n\n                    // Enregistrer automatiquement le document après la mise à jour du champ\n                    frm.save();\n\n                    // Optionnel : Afficher un message de succès\n                    // frappe.msgprint(`Coordonnées GPS récupérées et enregistrées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        }, __(\"Localiser\"));\n\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-14 12:40:21.326894",
  "module": "Aures CRM",
  "name": "Carte Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if (frm.doc.custom_gps) {\n            const [latitude, longitude] = frm.doc.custom_gps.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['custom_carte'].wrapper).html(`<iframe width=\"100%\" height=\"200\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-23 14:06:51.924484",
  "module": "Aures CRM",
  "name": "Carte Livraison Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if (frm.doc.custom_gps_livraison) {\n            const [latitude, longitude] = frm.doc.custom_gps_livraison.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['custom_carte_livraison'].wrapper).html(`<iframe width=\"100%\" height=\"200\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2025-03-09 12:55:36.061249",
  "module": "Aures CRM",
  "name": "Bouton Créer - Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh: function(frm) {\n        // Bouton \"Appeler\" sous le groupe \"Créer\"\n        // frm.add_custom_button(__('Appel Téléphonique'), function() {\n        //     let phone_number = frm.doc.mobile_no;\n        //     if (phone_number) {\n        //         frappe.db.insert({\n        //             doctype: 'Appel Telephonique',\n        //             client: frm.doc.name,\n        //             date: frappe.datetime.get_today(),\n        //             heure: frappe.datetime.now_datetime(),\n        //             utilisateur: frappe.user.full_name(),\n        //         }).then(function(doc) {\n        //             frappe.msgprint(__('Un nouvel appel téléphonique a été enregistré.'));\n        //             frappe.set_route('Form', 'Appel Telephonique', doc.name);\n        //         });\n\n        //         window.location.href = 'tel:' + phone_number;\n        //     } else {\n        //         frappe.msgprint(__('Aucun numéro de téléphone mobile n\\'est défini pour ce client.'));\n        //     }\n        // }, __(\"Créer\"));\n\n        // Bouton \"Créer Visite\" sous le groupe \"Créer\"\n        frm.add_custom_button(__('Visite Commerciale'), function() {\n    frappe.prompt([\n        {\n            fieldname: 'type_visite',\n            fieldtype: 'Select',\n            label: __('Type de Visite'),\n            reqd: 1,\n            options: 'Prospection\\nPrésentation de produit\\nNégociation\\nSuivi Client\\nRéclamation client\\nRecouvrement'\n        }\n    ], function(values) {\n        frappe.db.insert({\n            doctype: 'Visite Commerciale',\n            client: frm.doc.name,\n            date: frappe.datetime.get_today(),\n            utilisateur: frappe.user.full_name(),\n            type_visite: values.type_visite\n        }).then(function(doc) {\n            frappe.msgprint(__('Une nouvelle visite commerciale a été créée.'));\n            frappe.set_route('Form', 'Visite Commerciale', doc.name);\n        });\n    }, __('Sélectionnez le type de visite'), __('Créer'));\n}, __(\"Créer\"));\n\nfrm.add_custom_button(__('Reclamation'), function() {\n    frappe.prompt([\n        {\n            fieldname: 'type_reclamation',\n            fieldtype: 'Select',\n            label: __('Type Réclamation'),\n            reqd: 1,\n            options: 'Qualité\\nRetards Livraison\\nAutres'\n        },\n        {\n            fieldname: 'observations',\n            fieldtype: 'Text Editor',\n            label: __('Observations'),\n            reqd: 1\n        },\n        {\n            fieldname: 'observation_interne',\n            fieldtype: 'Text Editor',\n            label: __('Observations Internes'),\n            reqd: 1\n        }\n    ], function(values) {\n        frappe.db.insert({\n            doctype: 'Reclamations Clients',\n            client: frm.doc.name,\n            type_reclamation: values.type_reclamation,\n            observations: values.observations,\n            observation_interne: values.observation_interne \n        }).then(function(doc) {\n            frappe.msgprint(__('Une nouvelle réclamation a été créée.'));\n            frappe.set_route('Form', 'Reclamations Clients', doc.name);\n        });\n    }, __('Saisissez les informations de la réclamation'), __('Créer'));\n}, __(\"Créer\"));\n\n\n\n\n\n        // Bouton \"Créer Devis\" sous le groupe \"Créer\"\n        // frm.add_custom_button(__('Créer Devis'), function() {\n        //     frappe.model.open_mapped_doc({\n        //         method: \"erpnext.selling.doctype.customer.customer.make_quotation\",\n        //         frm: frm,  // Passe le formulaire courant pour créer un devis à partir de ce client\n        //     });\n        // }, __(\"Créer\"));\n\n        // Bouton \"Créer Commande\" sous le groupe \"Créer\"\n        frm.add_custom_button(__('Commande'), function() {\n            frappe.new_doc('Sales Order', {\n                customer: frm.doc.name  // Le champ reste customer dans Sales Order\n            }).then(function(doc) {\n                frappe.msgprint(__('Nouvelle commande créée avec succès !'));\n            }).catch(function(error) {\n                frappe.msgprint(__('Erreur lors de la création de la commande : ') + error);\n            });\n        }, __(\"Créer\"));\n        \n        frm.add_custom_button(__('Rendez-vous'), function() {\n            frappe.db.insert({\n                doctype: 'Rendez Vous Client',\n                client: frm.doc.name,\n            }).then(function(doc) {\n                frappe.msgprint(__('Nouveau Rendez-vous Client a été créée.'));\n                frappe.set_route('Form', 'Rendez-vous Client', doc.name);\n            });\n        }, __(\"Créer\"));\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-27 14:09:02.431490",
  "module": "Aures CRM",
  "name": "Statut Customer",
  "script": "frappe.listview_settings['Customer'].get_indicator = function(doc) {\n    if (doc.custom_status === 'Prospect') {\n        return [__('Prospect'), 'blue', 'custom_status,=,Prospect'];\n    } else if (doc.custom_status === 'Actif') {\n        return [__('Actif'), 'green', 'custom_status,=,Actif'];\n    } else if (doc.custom_status === 'Dormant') {\n        return [__('Dormant'), 'orange', 'custom_status,=,Dormant'];\n    } else if (doc.custom_status === 'Perdu') {\n        return [__('Perdu'), 'red', 'custom_status,=,Perdu'];\n    } else if (doc.custom_status === 'Exclu') {\n        return [__('Exclu'), 'gray', 'custom_status,=,Exclu'];\n    }\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-08-28 13:48:06.531356",
  "module": "Aures CRM",
  "name": "Calcul qualité Client",
  "script": "frappe.ui.form.on('Customer', {\n    custom_qualité_fréquence: function(frm) {\n        valider_champ(frm, 'custom_qualité_fréquence');\n        calculer_moyenne(frm);\n    },\n    custom_qualité_interaction: function(frm) {\n        valider_champ(frm, 'custom_qualité_interaction');\n        calculer_moyenne(frm);\n    },\n    custom_qualité_paiements: function(frm) {\n        valider_champ(frm, 'custom_qualité_paiements');\n        calculer_moyenne(frm);\n    }\n});\n\nfunction valider_champ(frm, fieldname) {\n    let valeur = frm.doc[fieldname];\n    if (valeur < 0 || valeur > 10) {\n        frappe.msgprint(__('La valeur de {0} doit être comprise entre 0 et 10.', [fieldname]));\n        frm.set_value(fieldname, '');\n    }\n}\n\nfunction calculer_moyenne(frm) {\n    let freq = frm.doc.custom_qualité_fréquence || 0;\n    let interaction = frm.doc.custom_qualité_interaction || 0;\n    let paiements = frm.doc.custom_qualité_paiements || 0;\n\n    let moyenne = (freq + interaction + paiements) / 3;\n\n    // Convertir la moyenne en une valeur de type évaluation (0 à 1)\n    let evaluation = moyenne / 10;\n\n    // Mettre à jour le champ custom_qualité_client\n    frm.set_value('custom_qualité_client', evaluation);\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-09-09 11:23:57.481621",
  "module": "Aures CRM",
  "name": "Cacher Bouton - Obtenir Articles",
  "script": "frappe.ui.form.on('Quotation', {\n    onload_post_render(frm) {\n        // Retirer le bouton personnalisé \"Opportunity\" dans le groupe \"Get Items From\"\n        frm.remove_custom_button('Opportunity', 'Get Items From');\n    },\n    refresh(frm) {\n        setTimeout(() => {\n            // Tenter de supprimer à nouveau au cas où il est ajouté après le refresh\n            frm.remove_custom_button('Opportunity', 'Get Items From');\n        }, 500);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-09-09 12:45:29.898350",
  "module": "Aures CRM",
  "name": "Utilisateur Devis",
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_save: function(frm) {\n        if (!frm.doc.utilisateur) {  // Vérifie si le champ utilisateur est vide\n            frm.set_value('custom_utilisateur', frm.doc.owner);  // Définit l'utilisateur avec le propriétaire initial (créateur)\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-09-09 12:46:00.713161",
  "module": "Aures CRM",
  "name": "Utilisateur Commande",
  "script": "frappe.ui.form.on('Sales Order', {\n\tbefore_save: function(frm) {\n        if (!frm.doc.utilisateur) {  // Vérifie si le champ utilisateur est vide\n            frm.set_value('custom_utilisateur', frm.doc.owner);  // Définit l'utilisateur avec le propriétaire initial (créateur)\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-03-07 18:07:30.247869",
  "module": "Aures CRM",
  "name": "Cacher boutons - Commande",
  "script": "frappe.ui.form.on('Sales Order', {\n    onload_post_render(frm) {\n        // Retirer le bouton personnalisé \"Opportunity\" dans le groupe \"Get Items From\"\n        frm.remove_custom_button('Pick List', 'Create');\n        // frm.remove_custom_button('Delivery Note', 'Create');\n        // frm.remove_custom_button('Work Order', 'Create');\n        // frm.remove_custom_button('Sales Invoice', 'Create');\n        // frm.remove_custom_button('Material Request', 'Create');\n        // frm.remove_custom_button('Request for Raw Materials', 'Create');\n        // frm.remove_custom_button('Purchase Order', 'Create');\n        frm.remove_custom_button('Project', 'Create');\n        // frm.remove_custom_button('Payment Request', 'Create');\n        frm.remove_custom_button('Payment', 'Create');\n    },\n    refresh(frm) {\n        setTimeout(() => {\n            // Tenter de supprimer à nouveau au cas où il est ajouté après le refresh\n            frm.remove_custom_button('Pick List', 'Create');\n            // frm.remove_custom_button('Delivery Note', 'Create');\n            // frm.remove_custom_button('Work Order', 'Create');\n            // frm.remove_custom_button('Sales Invoice', 'Create');\n            // frm.remove_custom_button('Material Request', 'Create');\n            // frm.remove_custom_button('Request for Raw Materials', 'Create');\n            // frm.remove_custom_button('Purchase Order', 'Create');\n            frm.remove_custom_button('Project', 'Create');\n            // frm.remove_custom_button('Payment Request', 'Create');\n            frm.remove_custom_button('Payment', 'Create');\n        }, 500);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2025-02-05 12:56:21.717178",
  "module": "Aures CRM",
  "name": "HTML adresses de livraison",
  "script": "frappe.ui.form.on('Customer', {\n    refresh: function(frm) {\n        if (!frm.doc.__islocal) {\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: 'Adresses de livraison',\n                    filters: { client: frm.doc.name },\n                    fields: ['name', 'adresse_principale', 'commune', 'wilaya']\n                },\n                callback: function(response) {\n                    let html = '';\n                    if (response.message && response.message.length > 0) {\n                        let addresses = response.message;\n                        \n                        // Pour chaque adresse, récupérer le libellé de la commune et de la wilaya\n                        let promises = addresses.map(address => {\n                            return Promise.all([\n                                frappe.db.get_value(\"Communes\", address.commune, \"commune\"),\n                                frappe.db.get_value(\"Wilayas\", address.wilaya, \"wilaya\")\n                            ]).then(results => {\n                                let communeData = results[0],\n                                    wilayaData = results[1];\n                                address.commune_label = (communeData && communeData.message && communeData.message.commune) || address.commune;\n                                address.wilaya_label = (wilayaData && wilayaData.message && wilayaData.message.wilaya) || address.wilaya;\n                                return address;\n                            });\n                        });\n                        \n                        Promise.all(promises).then(updatedAddresses => {\n                            html += `\n                                <style>\n                                    .table-container {\n                                        margin-top: 5px;\n                                        margin-bottom: 20px;\n                                        border: 1px solid #e5e7eb;\n                                        border-radius: 10px;\n                                        overflow-x: auto;\n                                        background: white;\n                                    }\n                                    table {\n                                        width: 100%;\n                                        border-collapse: collapse;\n                                        border-spacing: 0;\n                                        font-size: 12px;\n                                    }\n                                    thead {\n                                        background: #f9fafb;\n                                        border-bottom: 1px solid #e5e7eb;\n                                    }\n                                    th, td {\n                                        padding: 10px;\n                                        text-align: left;\n                                        border-bottom: 1px solid #e5e7eb;\n                                    }\n                                    tbody tr:last-child td {\n                                        border-bottom: none;\n                                    }\n                                    tr {\n                                        cursor: pointer;\n                                    }\n                                    tr:hover {\n                                        background: #f9fafb;\n                                    }\n                                    .col-number {\n                                        width: 50px;\n                                        text-align: center;\n                                    }\n                                    .col-id {\n                                        width: 120px;\n                                        text-align: left;\n                                    }\n                                    /* Style pour l'icône check */\n                                    .check-icon {\n                                        color: green;\n                                        font-size: 16px;\n                                    }\n                                    /* Responsive Design */\n                                    @media screen and (max-width: 768px) {\n                                        table {\n                                            font-size: 10px;\n                                        }\n                                        th, td {\n                                            padding: 8px;\n                                        }\n                                        .hide-on-mobile {\n                                            display: none;\n                                        }\n                                    }\n                                    /* Style pour le bouton intégré */\n                                    .new-address-btn {\n                                        margin-top: 10px;\n                                    }\n                                </style>\n                                \n                                <div class=\"table-container\">\n                                    <table>\n                                        <thead>\n                                            <tr>\n                                                <th class=\"col-number\">Nº</th>\n                                                <th class=\"col-id\">ID</th>\n                                                <th>Commune</th>\n                                                <th>Wilaya</th>\n                                                <th>Principale</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>`;\n                            \n                            updatedAddresses.forEach((address, index) => {\n                                html += `<tr onclick=\"frappe.set_route('Form', 'Adresses de livraison', '${address.name}')\">\n                                            <td class=\"col-number\">${index + 1}</td>\n                                            <td class=\"col-id\">${address.name}</td>\n                                            <td>${address.commune_label}</td>\n                                            <td>${address.wilaya_label}</td>\n                                            <td>${address.adresse_principale ? '<i class=\"fa fa-check check-icon\"></i>' : ''}</td>\n                                         </tr>`;\n                            });\n                            \n                            html += `\n                                        </tbody>\n                                    </table>\n                                </div>`;\n                            \n                            // Bouton intégré affiché en dessous de la liste, toujours visible\n                            html += `<div class=\"new-address-btn\" style=\"padding: 10px; text-align: center;\">\n                                        <button class=\"btn btn-secondary\" onclick=\"frappe.route_options = { client: '${frm.doc.name}' }; frappe.set_route('Form', 'Adresses de livraison', 'new');\">\n                                            Nouvelle Adresse de Livraison\n                                        </button>\n                                    </div>`;\n                            \n                            frm.set_df_property('custom_html_adresses_livraison', 'options', html);\n                        });\n                    } else {\n                        // Aucun résultat : affiche un message et le bouton intégré pour créer une nouvelle adresse\n                        html = `<div style=\"padding: 10px; color: #555; text-align: center;\">\n                                    Aucune adresse de livraison n'a été trouvée pour ce client.\n                                    <br><br>\n                                    <button class=\"btn btn-secondary\" \n                                        onclick=\"frappe.route_options = { client: '${frm.doc.name}' }; frappe.set_route('Form', 'Adresses de livraison', 'new');\">\n                                        Nouvelle Adresse de Livraison\n                                    </button>\n                                </div>`;\n                        frm.set_df_property('custom_html_adresses_livraison', 'options', html);\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2025-02-24 18:00:54.393561",
  "module": "Aures CRM",
  "name": "Upper name",
  "script": "frappe.ui.form.on('Item', {\n    item_code: function(frm) {\n        if (frm.doc.item_code) {\n            frm.set_value('item_code', frm.doc.item_code.toUpperCase());\n        }\n    },\n    item_name: function(frm) {\n        if (frm.doc.item_name) {\n            frm.set_value('item_name', frm.doc.item_name.toUpperCase());\n        }\n    },\n    validate: function(frm) {\n        if (frm.doc.item_code) {\n            frm.set_value('item_code', frm.doc.item_code.toUpperCase());\n        }\n        if (frm.doc.item_name) {\n            frm.set_value('item_name', frm.doc.item_name.toUpperCase());\n        }\n    }\n});\n",
  "view": "Form"
 }
]